variables:
    ZIP_VERSION: $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-$CI_COMMIT_TAG.zip
    IMAGE_VERSION: "${CI_REGISTRY}/vatgia/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}"
stages:
    - build
    - push
    - deploy

build:
    stage: build
    variables:
        GIT_STRATEGY: clone
    script:
        - npm run prod --mode=raovat
        - docker build -t $IMAGE_VERSION .
    tags:
        - vatgia-runner-dev-shell
    only:
        - tags

push:
    stage: push
    variables:
        GIT_STRATEGY: none
    before_script: 
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASS $CI_REGISTRY
    script:
        - docker push $IMAGE_VERSION
    after_script:
        - docker logout $CI_REGISTRY
    tags:
        - vatgia-runner-dev-shell
    only:
        - tags

deploy:
    stage: deploy
    variables:
        GIT_STRATEGY: none
    before_script: 
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASS $CI_REGISTRY
    script:
        - docker pull $IMAGE_VERSION
        - sudo su phantoanit -c "docker rm -f $CI_PROJECT_NAME; docker run --name $CI_PROJECT_NAME -dp $VG_PORT $IMAGE_VERSION"
    after_script:
        - docker logout $CI_REGISTRY
    tags:
        - vatgia-runner-dev-shell
    only:
        - tags
   
