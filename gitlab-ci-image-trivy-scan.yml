variables:
    PATH_PROJECT: "/home/onlineshop/online-shop-backend/"
    USER_PROJECT: "onlineshop"
    IMAGE_VERSION: "$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA"
    CODECLIMATE_FILE: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_codeclimate"
    SNYKSCAN_FILE: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_snykscan"
    TRIVYFS_REPORT: "trivyfs_scan_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
    TRIVY_IMAGE_REPORT: "security_scan_image_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"

stages:
    - build
    - test source code
    - security scan image
    - deploy

Build:
    stage: build
    variables:
        GIT_STRATEGY: clone
    script:
        - docker build -t ${IMAGE_VERSION} .
    tags: 
        - online-shop-runner-dev-shell

Test source code:
    stage: test source code
    variables:
        GIT_STRATEGY: none
    script:
        - echo ""
        #- docker run --interactive --platform linux/amd64 --rm -e CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f html> $CODECLIMATE_FILE.html
    tags:
        - online-shop-runner-dev-shell
    artifacts:
        paths:
        - $CODECLIMATE_FILE.html
        expire_in: 1 day

Snykscan:
    stage: test source code
    variables:
        GIT_STRATEGY: clone
    script:
        - docker build --rm --network host --build-arg SNYK_AUTH_TOKEN=$SNYK_TOKEN --build-arg OUTPUT_FILENAME=$SNYKSCAN_FILE -t $SNYKSCAN_FILE -f Dockerfile-snyk .
        - docker create --name $SNYKSCAN_FILE $SNYKSCAN_FILE
        - docker cp $SNYKSCAN_FILE:/app/$SNYKSCAN_FILE.html .
    tags:
        - online-shop-runner-dev-shell
    artifacts:
        paths:
        - $SNYKSCAN_FILE.html
        expire_in: 1 day

Trivyfs scan:
    stage: test source code
    variables:
        GIT_STRATEGY: clone
    script:
        - docker run --rm -v $PWD:/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy fs /${CI_PROJECT_NAME} --severity HIGH,CRITICAL --format template --template "@contrib/html.tpl" --output /${CI_PROJECT_NAME}/$TRIVYFS_REPORT.html
    tags:
        - online-shop-runner-dev-shell
    artifacts:
        paths:
        - $TRIVYFS_REPORT.html
        expire_in: 1 day

Trivy scan image:
    stage: security scan image
    variables:
        GIT_STRATEGY: none
    script:
        - docker run --rm -v $(pwd):/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy clean --all
        - docker run --rm -v $(pwd):/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --format template --template "@contrib/html.tpl" --output /${CI_PROJECT_NAME}/${TRIVY_IMAGE_REPORT}.html $IMAGE_VERSION
    tags:
        - online-shop-runner-dev-shell
    artifacts:
        paths:
        - ${TRIVY_IMAGE_REPORT}.html
        expire_in: 1 day
Deploy:
    stage: deploy
    variables:
        GIT_STRATEGY: none
    script:
        - sudo su ${USER_PROJECT} -c "docker rm -f $CI_PROJECT_NAME; docker run --name $CI_PROJECT_NAME -dp '5214:5214' ${IMAGE_VERSION}"
    tags: 
        - online-shop-runner-dev-shell

