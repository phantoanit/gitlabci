variables:
    PATH_PROJECT: "/home/onlineshop/online-shop-frontend/"
    USER_PROJECT: "onlineshop"
    #IMAGE_VERSION: "$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA"
    IMAGE_VERSION: "online-shop-frontend:fe20000b"
    CODECLIMATE_FILE: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_codeclimate"
    SNYKSCAN_FILE: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_snykscan"
    TRIVYFS_REPORT: "trivyfs_scan_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
    TRIVY_IMAGE_REPORT: "security_scan_image_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
    ARACHNI_WEBSITE_REPORT: "security_scan_website_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
    K6_PERFORMACE_TEST_REPORT: "performace_test_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
stages:
    - build
    - deploy
    - performace testing

Build:
    stage: build
    variables:
        GIT_STRATEGY: clone
    script:
        - echo ""
        #- docker build -t ${IMAGE_VERSION} .
    tags: 
        - online-shop-runner-dev-shell


Deploy:
    stage: deploy
    variables:
        GIT_STRATEGY: none
    script:
        - sudo su ${USER_PROJECT} -c "docker rm -f $CI_PROJECT_NAME; docker run --name $CI_PROJECT_NAME -dp '3000:3000' ${IMAGE_VERSION}"
    tags: 
        - online-shop-runner-dev-shell



Performace testing:
    stage: performace testing
    variables:
        GIT_STRATEGY: clone
    script:
        - chmod -R 777 ./performace_testing_script/
        - docker run --rm  --platform linux/arm64 -v $(pwd)/performace_testing_script:/performace_testing_script loadimpact/k6 run /performace_testing_script/smoke-test.js
        - mv ./performace_testing_script/summary.html $(pwd)/$K6_PERFORMACE_TEST_REPORT.html
    after_script:
        - sudo chown -R gitlab-runner $(pwd)
    tags:
        - online-shop-runner-dev-shell
    artifacts:
        paths:
        - $K6_PERFORMACE_TEST_REPORT.html
        expire_in: 1 day

